// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ConsultaNotas.Models
{
    public partial class ConsultaNotasDBContext : DbContext
    {
        public ConsultaNotasDBContext()
        {
        }

        public ConsultaNotasDBContext(DbContextOptions<ConsultaNotasDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Calificaciones> Calificaciones { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Modern_Spanish_CI_AS");

            modelBuilder.Entity<AspNetRoleClaims>(entity =>
            {
                entity.HasIndex(e => e.RoleId, "IX_AspNetRoleClaims_RoleId");

                entity.Property(e => e.RoleId).IsRequired();

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.AspNetRoleClaims)
                    .HasForeignKey(d => d.RoleId);
            });

            modelBuilder.Entity<AspNetRoles>(entity =>
            {
                entity.HasIndex(e => e.NormalizedName, "RoleNameIndex")
                    .IsUnique()
                    .HasFilter("([NormalizedName] IS NOT NULL)");

                entity.Property(e => e.Name).HasMaxLength(256);

                entity.Property(e => e.NormalizedName).HasMaxLength(256);
            });

            modelBuilder.Entity<AspNetUserClaims>(entity =>
            {
                entity.HasIndex(e => e.UserId, "IX_AspNetUserClaims_UserId");

                entity.Property(e => e.UserId).IsRequired();

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserClaims)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUserLogins>(entity =>
            {
                entity.HasKey(e => new { e.LoginProvider, e.ProviderKey });

                entity.HasIndex(e => e.UserId, "IX_AspNetUserLogins_UserId");

                entity.Property(e => e.LoginProvider).HasMaxLength(128);

                entity.Property(e => e.ProviderKey).HasMaxLength(128);

                entity.Property(e => e.UserId).IsRequired();

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserLogins)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUserTokens>(entity =>
            {
                entity.HasKey(e => new { e.UserId, e.LoginProvider, e.Name });

                entity.Property(e => e.LoginProvider).HasMaxLength(128);

                entity.Property(e => e.Name).HasMaxLength(128);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AspNetUserTokens)
                    .HasForeignKey(d => d.UserId);
            });

            modelBuilder.Entity<AspNetUsers>(entity =>
            {
                entity.HasIndex(e => e.NormalizedEmail, "EmailIndex");

                entity.HasIndex(e => e.NormalizedUserName, "UserNameIndex")
                    .IsUnique()
                    .HasFilter("([NormalizedUserName] IS NOT NULL)");

                entity.Property(e => e.Email).HasMaxLength(256);

                entity.Property(e => e.NormalizedEmail).HasMaxLength(256);

                entity.Property(e => e.NormalizedUserName).HasMaxLength(256);

                entity.Property(e => e.UserName).HasMaxLength(256);

                entity.HasMany(d => d.Role)
                    .WithMany(p => p.User)
                    .UsingEntity<Dictionary<string, object>>(
                        "AspNetUserRoles",
                        l => l.HasOne<AspNetRoles>().WithMany().HasForeignKey("RoleId"),
                        r => r.HasOne<AspNetUsers>().WithMany().HasForeignKey("UserId"),
                        j =>
                        {
                            j.HasKey("UserId", "RoleId");

                            j.ToTable("AspNetUserRoles");

                            j.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");
                        });
            });

            modelBuilder.Entity<Calificaciones>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("calificaciones");

                entity.HasComment("TRIAL");

                entity.HasIndex(e => e.AñoLectivo, "año_lectiv");

                entity.HasIndex(e => e.CodigoAlumna, "codalum");

                entity.HasIndex(e => new { e.CodigoAlumna, e.CodigoAsignatura }, "codigo_alu");

                entity.HasIndex(e => e.CodigoAsignatura, "codigo_asi");

                entity.HasIndex(e => e.Alumnas, "idx_alumnas");

                entity.HasIndex(e => e.NLista, "idx_n_lista");

                entity.HasIndex(e => e.Tipocalificacion, "tipocalifi");

                entity.Property(e => e.Alumnas)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("alumnas")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Asignatura)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("asignatura")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Aula)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("aula")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.AñoLectivo)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("año_lectivo")
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat1p)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat1p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat1s)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat1s")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat2p)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat2p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat2s)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat2s")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat3p)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat3p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Cat4p)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cat4p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Categoria)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("categoria")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Catnf)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("catnf")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.ClaveCalificacion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("clave_calificacion")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoAlumna)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("codigo_alumna")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoAsignatura)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("codigo_asignatura")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoAula)
                    .HasColumnType("numeric(7, 0)")
                    .HasColumnName("codigo_aula")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoCategoria)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("codigo_categoria")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoGrado)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("codigo_grado")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoNivel)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("codigo_nivel")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoProfesor)
                    .HasColumnType("numeric(21, 0)")
                    .HasColumnName("codigo_profesor")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoProfesorGuia)
                    .HasColumnType("numeric(11, 0)")
                    .HasColumnName("codigo_profesor_guia")
                    .HasComment("TRIAL");

                entity.Property(e => e.CodigoTipo)
                    .HasColumnType("numeric(11, 0)")
                    .HasColumnName("codigo_tipo")
                    .HasComment("TRIAL");

                entity.Property(e => e.Directora)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("directora")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina1p)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_1p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina1pcat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_1pcat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina2p)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_2p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina2pcat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_2pcat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina3p)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_3p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina3pcat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_3pcat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina4p)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_4p")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Disciplina4pcat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_4pcat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaNf)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_nf")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaNfcat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_nfcat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaPs)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_ps")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaPscat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_pscat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaSs)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_ss")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.DisciplinaSscat)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("disciplina_sscat")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Domicilio)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("domicilio")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Grado)
                    .IsRequired()
                    .HasMaxLength(130)
                    .IsUnicode(false)
                    .HasColumnName("grado")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.NLista)
                    .HasColumnType("numeric(11, 0)")
                    .HasColumnName("n_lista")
                    .HasComment("TRIAL");

                entity.Property(e => e.Nivel)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nivel")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.NombreDisciplinas)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombre_disciplinas")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.NotaFinal)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("nota_final")
                    .HasComment("TRIAL");

                entity.Property(e => e.NotaReparacion)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("nota_reparacion")
                    .HasComment("TRIAL");

                entity.Property(e => e.Observacion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("observacion")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.ObservacionMaestra)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("observacion_maestra")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Observaciones)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("observaciones")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.PrimerSemestre)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("primer_semestre")
                    .HasComment("TRIAL");

                entity.Property(e => e.Profesor)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("profesor")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.ProfesorGuia)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("profesor_guia")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.PsPrimeraEvalucionParcial)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ps_primera_evalucion_parcial")
                    .HasComment("TRIAL");

                entity.Property(e => e.PsSegundaEvaluacionParcial)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ps_segunda_evaluacion_parcial")
                    .HasComment("TRIAL");

                entity.Property(e => e.Retirada)
                    .HasColumnName("retirada")
                    .HasComment("TRIAL");

                entity.Property(e => e.SegundoSemestre)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("segundo_semestre")
                    .HasComment("TRIAL");

                entity.Property(e => e.SsPrimeraEvalucionParcial)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ss_primera_evalucion_parcial")
                    .HasComment("TRIAL");

                entity.Property(e => e.SsSegundaEvaluacionParcial)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ss_segunda_evaluacion_parcial")
                    .HasComment("TRIAL");

                entity.Property(e => e.TelefonoResponsable)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("telefono_responsable")
                    .IsFixedLength()
                    .HasComment("TRIAL");

                entity.Property(e => e.Tipocalificacion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tipocalificacion")
                    .IsFixedLength()
                    .HasComment("TRIAL");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}